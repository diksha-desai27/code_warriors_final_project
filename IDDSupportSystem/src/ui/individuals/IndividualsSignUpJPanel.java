/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.individuals;

import business.DB4OUtil.DB4OUtil;
import business.EcoSystem;
import business.individuals.Individual;
import business.individuals.IndividualDirectory;
import business.role.IndividualRole;
import business.role.Role.RoleType;
import business.useraccount.UserAccountDirectory;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Properties;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.mail.Session;
import javax.mail.PasswordAuthentication;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

/**
 *
 * @author sayalipathare
 */
public class IndividualsSignUpJPanel extends javax.swing.JPanel {

    private JPanel rightJPanel;
    private UserAccountDirectory userAccountDirectory;
    private IndividualDirectory individualDirectory;
    private EcoSystem system;
    private DB4OUtil dB4OUtil;
    JButton signUpBtn;

    /**
     * Creates new form IndividualsSignUpJPanel
     */
    public IndividualsSignUpJPanel(JButton signUpBtn, JPanel rightJPanel, EcoSystem system, DB4OUtil dB4OUtil) {
        initComponents();
        this.rightJPanel = rightJPanel;
        this.system = system;
        this.dB4OUtil = dB4OUtil;
        Calendar cal = Calendar.getInstance();
        cal.add(Calendar.YEAR, -25);//15 year before
        Date min = cal.getTime();
        Calendar cal1 = Calendar.getInstance();
        cal1.add(Calendar.YEAR, -10);//15 year before
        Date max = cal1.getTime();//actual date
        birthDayChooser.setSelectableDateRange(min, max);
        this.signUpBtn = signUpBtn;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        firstNamejTextField = new javax.swing.JTextField();
        lastNamejTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        zipCodejTextField = new javax.swing.JTextField();
        userNameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        userNamejTextField = new javax.swing.JTextField();
        btnRegister = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        birthDayChooser = new com.toedter.calendar.JDateChooser();
        confirmLabel = new javax.swing.JLabel();
        passwordJField = new javax.swing.JPasswordField();
        confirmJPassword = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        addressjTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cityTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("SIGN UP FORM");
        add(jLabel1);
        jLabel1.setBounds(210, 20, 190, 29);

        jLabel2.setText("First Name");
        add(jLabel2);
        jLabel2.setBounds(40, 90, 68, 16);

        jLabel3.setText("Last Name");
        add(jLabel3);
        jLabel3.setBounds(368, 90, 66, 16);

        jLabel4.setText("Birth Date");
        add(jLabel4);
        jLabel4.setBounds(34, 138, 62, 16);
        add(firstNamejTextField);
        firstNamejTextField.setBounds(176, 85, 151, 26);
        add(lastNamejTextField);
        lastNamejTextField.setBounds(470, 85, 148, 26);

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel6.setText("Address:");
        add(jLabel6);
        jLabel6.setBounds(34, 186, 59, 16);

        jLabel7.setText("Zipcode");
        add(jLabel7);
        jLabel7.setBounds(34, 313, 66, 16);
        add(zipCodejTextField);
        zipCodejTextField.setBounds(176, 308, 163, 26);

        userNameLabel.setText("User Name");
        add(userNameLabel);
        userNameLabel.setBounds(34, 372, 68, 16);

        passwordLabel.setText("Password");
        add(passwordLabel);
        passwordLabel.setBounds(34, 416, 59, 16);
        add(userNamejTextField);
        userNamejTextField.setBounds(176, 367, 163, 26);

        btnRegister.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        btnRegister.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/customer.png"))); // NOI18N
        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });
        add(btnRegister);
        btnRegister.setBounds(210, 510, 150, 60);

        btnLogout.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        btnLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/Logout2.png"))); // NOI18N
        btnLogout.setText("Sign Out");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });
        add(btnLogout);
        btnLogout.setBounds(20, 510, 150, 60);
        add(birthDayChooser);
        birthDayChooser.setBounds(176, 138, 174, 26);

        confirmLabel.setText("Confirm Password");
        add(confirmLabel);
        confirmLabel.setBounds(34, 460, 130, 26);
        add(passwordJField);
        passwordJField.setBounds(176, 411, 163, 26);
        add(confirmJPassword);
        confirmJPassword.setBounds(176, 460, 163, 26);

        jLabel5.setText("Address Line 1:");
        add(jLabel5);
        jLabel5.setBounds(34, 225, 97, 16);
        add(addressjTextField);
        addressjTextField.setBounds(176, 220, 163, 26);

        jLabel8.setText("City");
        add(jLabel8);
        jLabel8.setBounds(34, 269, 25, 16);
        add(cityTextField);
        cityTextField.setBounds(176, 264, 163, 26);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/back.png"))); // NOI18N
        jLabel9.setText("jLabel9");
        add(jLabel9);
        jLabel9.setBounds(80, 10, 540, 50);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/consent.png"))); // NOI18N
        add(jLabel10);
        jLabel10.setBounds(30, 10, 50, 50);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        // TODO add your handling code here:
        Date date1 = birthDayChooser.getDate();
        String pattern = "yyyy-MM-dd";
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);
        String birthDateFormatted = simpleDateFormat.format(date1);
        if (firstNamejTextField.getText().equals("") || lastNamejTextField.getText().equals("") || birthDayChooser.equals("") || addressjTextField.getText().equals("") || zipCodejTextField.getText().equals("") || userNamejTextField.getText().equals("") || passwordJField.getPassword().equals("") || confirmJPassword.getPassword().equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill out all the details");
            return;
        } else {
            if (usernamePatternCorrect()) {
                if (passwordPatternCorrect()) {
                    if (String.valueOf(passwordJField.getPassword()).equals(String.valueOf(confirmJPassword.getPassword()))) {
                        if (firstNamePatternCorrect() && lastNamePatternCorrect()) {
                            if (zipCodePatternCorrect()) {
                                if (system.getUserAccountDirectory().checkIfUsernameIsUnique(userNamejTextField.getText())) {
                                    Individual ind = new Individual();
                                    if (ind != null) {
                                        ind.setFirstName(firstNamejTextField.getText());
                                        ind.setLastName(lastNamejTextField.getText());
                                        ind.setUserName(userNamejTextField.getText());
                                        ind.setAddress(addressjTextField.getText());
                                        ind.setCity(cityTextField.getText());
                                        ind.setBirthDate(birthDateFormatted);
                                        ind.setZipCode(Integer.parseInt(zipCodejTextField.getText()));
                                        system.getIndividualDirectory().getIndividualList().add(ind);
                                        system.getUserAccountDirectory().createUserAccount(userNamejTextField.getText(), String.valueOf(passwordJField.getPassword()), new IndividualRole(), RoleType.Individual);
                                        JOptionPane.showMessageDialog(null, "Account created successfully. Please sign out to login.");

                                        sendEmail();
                                        clearFields();
                                    }

                                } else {
                                    JOptionPane.showMessageDialog(null, "Account already exists.");
                                    return;
                                }

                            } else {
                                JOptionPane.showMessageDialog(null, "Please enter valid zip code.");
                                return;
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Please enter valid first and last name.");
                            return;
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Password and Confirm Password do not match.");
                        return;
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Please enter valid password");
                    return;
                }
            } else {

                JOptionPane.showMessageDialog(null, "Username is invalid. Username must be in the format: xx_xx@xx.xx");
                return;
            }
        }

    }//GEN-LAST:event_btnRegisterActionPerformed

    public void sendEmail() {

        Properties props = new Properties();
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.transport.protocol", "smtp");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.port", "465");
        props.put("mail.smtp.socketFactory.port", "465");
        props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
        String string1 = "Dear " + firstNamejTextField.getText() + " " + lastNamejTextField.getText() + "<br/>Thankyou for registering with us.<br/>You can now login with your credentials into our system<br/><br/>Thankyou,<br/>IDD Support Team";
        Session session = Session.getDefaultInstance(props);
        try {
            InternetAddress fromAddress = new InternetAddress("growinggreen04@gmail.com");
            InternetAddress toAddress = new InternetAddress(userNamejTextField.getText());

            Message message = new MimeMessage(session);
            message.setFrom(fromAddress);
            message.setRecipient(Message.RecipientType.TO, toAddress);
            message.setSubject("IDD System Registration Confirmation");
            message.setContent(string1, "text/html");

            Transport.send(message, "growinggreen04@gmail.com", "growinggreen@123");
        } catch (MessagingException ex) {
            ex.printStackTrace();
        }

    }


    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here: 
        JPanel blankJP = new JPanel();
        rightJPanel.add("blank", blankJP);
        CardLayout crdLyt = (CardLayout) rightJPanel.getLayout();
        crdLyt.next(rightJPanel);
        dB4OUtil.storeSystem(system);

        //        Component[] componentArray = rightJPanel.getComponents();
        // Component component = componentArray[componentArray.length - 1];
        // MainJPanel mainJPanel = (MainJPanel) component;
        //  mainJPanel.getBtnSignUp().setEnabled(true);
        signUpBtn.setEnabled(true);
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void clearFields() {
        firstNamejTextField.setText("");
        lastNamejTextField.setText("");
        userNamejTextField.setText("");
        passwordJField.setText("");
        confirmJPassword.setText("");
        addressjTextField.setText("");
        cityTextField.setText("");
        zipCodejTextField.setText("");
        birthDayChooser.setDate(new Date());
    }

    private boolean usernamePatternCorrect() {
        Pattern p = Pattern.compile("^[\\w-_\\.+]*[\\w-_\\.]\\@([\\w]+\\.)+[\\w]+[\\w]$");
        Matcher m = p.matcher(userNamejTextField.getText());
        Boolean b = m.matches();
        return b;
    }

    private boolean passwordPatternCorrect() {
        Pattern q = Pattern.compile("^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=_])(?=\\S+$).{6,20}$");
        Matcher n = q.matcher(passwordJField.getPassword().toString());
        Boolean c = n.matches();
        return c;
    }

    private boolean firstNamePatternCorrect() {
        Pattern p = Pattern.compile("[A-Z][a-z]*");
        Matcher m = p.matcher(firstNamejTextField.getText());
        Boolean b = m.matches();
        return b;
    }

    private boolean lastNamePatternCorrect() {
        Pattern p = Pattern.compile("[A-Z][a-z]*");
        Matcher m = p.matcher(lastNamejTextField.getText());
        Boolean b = m.matches();
        return b;
    }

    private boolean zipCodePatternCorrect() {
        Pattern p = Pattern.compile("^[0-9]{5}(?:-[0-9]{4})?$");
        Matcher m = p.matcher(zipCodejTextField.getText());
        Boolean b = m.matches();
        return b;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressjTextField;
    private com.toedter.calendar.JDateChooser birthDayChooser;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnRegister;
    private javax.swing.JTextField cityTextField;
    private javax.swing.JPasswordField confirmJPassword;
    private javax.swing.JLabel confirmLabel;
    private javax.swing.JTextField firstNamejTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField lastNamejTextField;
    private javax.swing.JPasswordField passwordJField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JTextField userNamejTextField;
    private javax.swing.JTextField zipCodejTextField;
    // End of variables declaration//GEN-END:variables
}
